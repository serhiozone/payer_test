// Generated by CoffeeScript 1.10.0
(function() {
  var AppState, Controller, EditForm, EditModel, Main, Views, appState, controller;

  Views = {};

  AppState = Backbone.Model.extend({
    birthday: "",
    email: "",
    phonenumber: "",
    gender: "",
    skillnumber: "",
    username: "",
    website: "",
    brief: ""
  });

  appState = new AppState;

  _.extend(Backbone.Validation.callbacks, {
    valid: function(view, attr, selector) {
      var $el, $group;
      $el = view.$('[name=' + attr + ']');
      $group = $el.closest('.form-group');
      $group.removeClass('has-error');
      $group.find('.help-block').html('').addClass('hidden');
    },
    invalid: function(view, attr, error, selector) {
      var $el, $group;
      $el = view.$('[name=' + attr + ']');
      console.log('er: ' + $el.attr('name'));
      $group = $el.closest('.form-group');
      $group.addClass('has-error');
    }
  });

  EditModel = Backbone.Model.extend({
    defaults: {
      terms: false,
      gender: ''
    },
    validation: {
      username: {
        required: true
      },
      email: {
        required: true,
        pattern: 'email'
      },
      password: {
        required: true,
        minLength: 8
      },
      password2: {
        required: true,
        equalTo: 'password'
      },
      gender: {
        required: true
      },
      skillnumber: {
        required: true
      },
      brief: {
        required: true
      },
      website: {
        required: true,
        pattern: 'url'
      },
      birthday: {
        required: true
      }
    }
  });

  EditForm = Backbone.View.extend({
    el: 'form',
    url: $("form").attr('action'),
    model: new EditModel(),
    events: {
      'click #save': function(e) {
        e.preventDefault();
        return this.save();
      },
      'click #cancel': function(e) {
        e.preventDefault();
        $("#modalEdit").modal('hide');
        return Backbone.history.navigate('', {
          trigger: true
        });
      }
    },
    render: function() {
      Backbone.Validation.bind(this);
      return $("#modalEdit").modal();
    },
    save: function() {
      var data;
      data = this.$el.serializeObject();
      this.model.set(data);
      console.log('save');
      if (this.model.isValid(true)) {
        $.ajax({
          type: "POST",
          url: this.url,
          data: data,
          dataType: 'json',
          success: function() {
            return console.log('success');
          },
          error: function() {
            return console.log('error');
          }
        });
        appState = data;
        $("#modalEdit").modal('hide');
        console.log(appState);
        Backbone.history.navigate('', {
          trigger: true
        });
      }
    },
    remove: function() {
      Backbone.Validation.unbind(this);
      return Backbone.View.prototype.remove.apply(this, arguments);
    }
  });

  Main = Backbone.View.extend({
    el: $("#page"),
    template: _.template($('#main').html()),
    initialize: function() {
      return this.render();
    },
    render: function() {
      return $(this.el).html(this.template(appState));
    }
  });

  Views = {
    main: new Main(),
    edit: new EditForm()
  };

  Controller = Backbone.Router.extend({
    routes: {
      "": "main",
      "!/edit": "edit"
    },
    main: function() {
      if (Views.main !== null) {
        return Views.main.render();
      }
    },
    edit: function() {
      if (Views.edit !== null) {
        return Views.edit.render();
      }
    }
  });

  controller = new Controller();

  Backbone.history.start();

  $(function() {
    $('.form-control').blur(function() {
      if ($(this).val().length !== 0) {
        return $(this).addClass('filled');
      } else {
        return $(this).removeClass('filled');
      }
    });
    return $("#openModalEdit").click(function() {
      return $("#modalEdit").modal();
    });
  });

}).call(this);
